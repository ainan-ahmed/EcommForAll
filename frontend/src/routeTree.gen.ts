/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as resetPasswordImport } from './routes/reset-password'
import { Route as registerImport } from './routes/register'
import { Route as loginImport } from './routes/login'
import { Route as forgotPasswordImport } from './routes/forgot-password'
import { Route as cartImport } from './routes/cart'
import { Route as aboutImport } from './routes/about'
import { Route as indexImport } from './routes/index'
import { Route as wishlistsIndexImport } from './routes/wishlists/index'
import { Route as profileIndexImport } from './routes/profile/index'
import { Route as productsIndexImport } from './routes/products/index'
import { Route as ordersIndexImport } from './routes/orders/index'
import { Route as categoriesIndexImport } from './routes/categories/index'
import { Route as brandsIndexImport } from './routes/brands/index'
import { Route as profileEditImport } from './routes/profile/edit'
import { Route as productsNewImport } from './routes/products/new'
import { Route as ordersCheckoutImport } from './routes/orders/checkout'
import { Route as ordersAdminImport } from './routes/orders/admin'
import { Route as categoriesNewImport } from './routes/categories/new'
import { Route as brandsNewImport } from './routes/brands/new'
import { Route as wishlistsWishlistIdIndexImport } from './routes/wishlists/$wishlistId/index'
import { Route as productsProductIdIndexImport } from './routes/products/$productId/index'
import { Route as ordersOrderIdIndexImport } from './routes/orders/$orderId/index'
import { Route as categoriesCategorySlugIndexImport } from './routes/categories/$categorySlug/index'
import { Route as brandsBrandIdIndexImport } from './routes/brands/$brandId/index'
import { Route as productsProductIdEditImport } from './routes/products/$productId/edit'
import { Route as categoriesCategorySlugEditImport } from './routes/categories/$categorySlug/edit'
import { Route as brandsBrandIdEditImport } from './routes/brands/$brandId/edit'

// Create Virtual Routes

const WishlistsImport = createFileRoute('/wishlists')()
const ProfileImport = createFileRoute('/profile')()
const ProductsImport = createFileRoute('/products')()
const OrdersImport = createFileRoute('/orders')()
const CategoriesImport = createFileRoute('/categories')()
const BrandsImport = createFileRoute('/brands')()
const WishlistsWishlistIdImport = createFileRoute('/wishlists/$wishlistId')()
const ProductsProductIdImport = createFileRoute('/products/$productId')()
const OrdersOrderIdImport = createFileRoute('/orders/$orderId')()
const CategoriesCategorySlugImport = createFileRoute(
  '/categories/$categorySlug',
)()
const BrandsBrandIdImport = createFileRoute('/brands/$brandId')()

// Create/Update Routes

const WishlistsRoute = WishlistsImport.update({
  id: '/wishlists',
  path: '/wishlists',
  getParentRoute: () => rootRoute,
} as any)

const resetPasswordRoute = resetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const registerRoute = registerImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ProductsRoute = ProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRoute,
} as any)

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const loginRoute = loginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const forgotPasswordRoute = forgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesRoute = CategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRoute,
} as any)

const cartRoute = cartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const BrandsRoute = BrandsImport.update({
  id: '/brands',
  path: '/brands',
  getParentRoute: () => rootRoute,
} as any)

const aboutRoute = aboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const indexRoute = indexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const wishlistsIndexRoute = wishlistsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WishlistsRoute,
} as any)

const profileIndexRoute = profileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProfileRoute,
} as any)

const productsIndexRoute = productsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductsRoute,
} as any)

const ordersIndexRoute = ordersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrdersRoute,
} as any)

const categoriesIndexRoute = categoriesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CategoriesRoute,
} as any)

const brandsIndexRoute = brandsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BrandsRoute,
} as any)

const WishlistsWishlistIdRoute = WishlistsWishlistIdImport.update({
  id: '/$wishlistId',
  path: '/$wishlistId',
  getParentRoute: () => WishlistsRoute,
} as any)

const profileEditRoute = profileEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => ProfileRoute,
} as any)

const productsNewRoute = productsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ProductsRoute,
} as any)

const ProductsProductIdRoute = ProductsProductIdImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => ProductsRoute,
} as any)

const ordersCheckoutRoute = ordersCheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => OrdersRoute,
} as any)

const ordersAdminRoute = ordersAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => OrdersRoute,
} as any)

const OrdersOrderIdRoute = OrdersOrderIdImport.update({
  id: '/$orderId',
  path: '/$orderId',
  getParentRoute: () => OrdersRoute,
} as any)

const categoriesNewRoute = categoriesNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => CategoriesRoute,
} as any)

const CategoriesCategorySlugRoute = CategoriesCategorySlugImport.update({
  id: '/$categorySlug',
  path: '/$categorySlug',
  getParentRoute: () => CategoriesRoute,
} as any)

const brandsNewRoute = brandsNewImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => BrandsRoute,
} as any)

const BrandsBrandIdRoute = BrandsBrandIdImport.update({
  id: '/$brandId',
  path: '/$brandId',
  getParentRoute: () => BrandsRoute,
} as any)

const wishlistsWishlistIdIndexRoute = wishlistsWishlistIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WishlistsWishlistIdRoute,
} as any)

const productsProductIdIndexRoute = productsProductIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProductsProductIdRoute,
} as any)

const ordersOrderIdIndexRoute = ordersOrderIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrdersOrderIdRoute,
} as any)

const categoriesCategorySlugIndexRoute =
  categoriesCategorySlugIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => CategoriesCategorySlugRoute,
  } as any)

const brandsBrandIdIndexRoute = brandsBrandIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BrandsBrandIdRoute,
} as any)

const productsProductIdEditRoute = productsProductIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => ProductsProductIdRoute,
} as any)

const categoriesCategorySlugEditRoute = categoriesCategorySlugEditImport.update(
  {
    id: '/edit',
    path: '/edit',
    getParentRoute: () => CategoriesCategorySlugRoute,
  } as any,
)

const brandsBrandIdEditRoute = brandsBrandIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => BrandsBrandIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof aboutImport
      parentRoute: typeof rootRoute
    }
    '/brands': {
      id: '/brands'
      path: '/brands'
      fullPath: '/brands'
      preLoaderRoute: typeof BrandsImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof cartImport
      parentRoute: typeof rootRoute
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof forgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof loginImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof registerImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof resetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/wishlists': {
      id: '/wishlists'
      path: '/wishlists'
      fullPath: '/wishlists'
      preLoaderRoute: typeof WishlistsImport
      parentRoute: typeof rootRoute
    }
    '/brands/$brandId': {
      id: '/brands/$brandId'
      path: '/$brandId'
      fullPath: '/brands/$brandId'
      preLoaderRoute: typeof BrandsBrandIdImport
      parentRoute: typeof BrandsImport
    }
    '/brands/new': {
      id: '/brands/new'
      path: '/new'
      fullPath: '/brands/new'
      preLoaderRoute: typeof brandsNewImport
      parentRoute: typeof BrandsImport
    }
    '/categories/$categorySlug': {
      id: '/categories/$categorySlug'
      path: '/$categorySlug'
      fullPath: '/categories/$categorySlug'
      preLoaderRoute: typeof CategoriesCategorySlugImport
      parentRoute: typeof CategoriesImport
    }
    '/categories/new': {
      id: '/categories/new'
      path: '/new'
      fullPath: '/categories/new'
      preLoaderRoute: typeof categoriesNewImport
      parentRoute: typeof CategoriesImport
    }
    '/orders/$orderId': {
      id: '/orders/$orderId'
      path: '/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof OrdersOrderIdImport
      parentRoute: typeof OrdersImport
    }
    '/orders/admin': {
      id: '/orders/admin'
      path: '/admin'
      fullPath: '/orders/admin'
      preLoaderRoute: typeof ordersAdminImport
      parentRoute: typeof OrdersImport
    }
    '/orders/checkout': {
      id: '/orders/checkout'
      path: '/checkout'
      fullPath: '/orders/checkout'
      preLoaderRoute: typeof ordersCheckoutImport
      parentRoute: typeof OrdersImport
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdImport
      parentRoute: typeof ProductsImport
    }
    '/products/new': {
      id: '/products/new'
      path: '/new'
      fullPath: '/products/new'
      preLoaderRoute: typeof productsNewImport
      parentRoute: typeof ProductsImport
    }
    '/profile/edit': {
      id: '/profile/edit'
      path: '/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof profileEditImport
      parentRoute: typeof ProfileImport
    }
    '/wishlists/$wishlistId': {
      id: '/wishlists/$wishlistId'
      path: '/$wishlistId'
      fullPath: '/wishlists/$wishlistId'
      preLoaderRoute: typeof WishlistsWishlistIdImport
      parentRoute: typeof WishlistsImport
    }
    '/brands/': {
      id: '/brands/'
      path: '/'
      fullPath: '/brands/'
      preLoaderRoute: typeof brandsIndexImport
      parentRoute: typeof BrandsImport
    }
    '/categories/': {
      id: '/categories/'
      path: '/'
      fullPath: '/categories/'
      preLoaderRoute: typeof categoriesIndexImport
      parentRoute: typeof CategoriesImport
    }
    '/orders/': {
      id: '/orders/'
      path: '/'
      fullPath: '/orders/'
      preLoaderRoute: typeof ordersIndexImport
      parentRoute: typeof OrdersImport
    }
    '/products/': {
      id: '/products/'
      path: '/'
      fullPath: '/products/'
      preLoaderRoute: typeof productsIndexImport
      parentRoute: typeof ProductsImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof profileIndexImport
      parentRoute: typeof ProfileImport
    }
    '/wishlists/': {
      id: '/wishlists/'
      path: '/'
      fullPath: '/wishlists/'
      preLoaderRoute: typeof wishlistsIndexImport
      parentRoute: typeof WishlistsImport
    }
    '/brands/$brandId/edit': {
      id: '/brands/$brandId/edit'
      path: '/edit'
      fullPath: '/brands/$brandId/edit'
      preLoaderRoute: typeof brandsBrandIdEditImport
      parentRoute: typeof BrandsBrandIdImport
    }
    '/categories/$categorySlug/edit': {
      id: '/categories/$categorySlug/edit'
      path: '/edit'
      fullPath: '/categories/$categorySlug/edit'
      preLoaderRoute: typeof categoriesCategorySlugEditImport
      parentRoute: typeof CategoriesCategorySlugImport
    }
    '/products/$productId/edit': {
      id: '/products/$productId/edit'
      path: '/edit'
      fullPath: '/products/$productId/edit'
      preLoaderRoute: typeof productsProductIdEditImport
      parentRoute: typeof ProductsProductIdImport
    }
    '/brands/$brandId/': {
      id: '/brands/$brandId/'
      path: '/'
      fullPath: '/brands/$brandId/'
      preLoaderRoute: typeof brandsBrandIdIndexImport
      parentRoute: typeof BrandsBrandIdImport
    }
    '/categories/$categorySlug/': {
      id: '/categories/$categorySlug/'
      path: '/'
      fullPath: '/categories/$categorySlug/'
      preLoaderRoute: typeof categoriesCategorySlugIndexImport
      parentRoute: typeof CategoriesCategorySlugImport
    }
    '/orders/$orderId/': {
      id: '/orders/$orderId/'
      path: '/'
      fullPath: '/orders/$orderId/'
      preLoaderRoute: typeof ordersOrderIdIndexImport
      parentRoute: typeof OrdersOrderIdImport
    }
    '/products/$productId/': {
      id: '/products/$productId/'
      path: '/'
      fullPath: '/products/$productId/'
      preLoaderRoute: typeof productsProductIdIndexImport
      parentRoute: typeof ProductsProductIdImport
    }
    '/wishlists/$wishlistId/': {
      id: '/wishlists/$wishlistId/'
      path: '/'
      fullPath: '/wishlists/$wishlistId/'
      preLoaderRoute: typeof wishlistsWishlistIdIndexImport
      parentRoute: typeof WishlistsWishlistIdImport
    }
  }
}

// Create and export the route tree

interface BrandsBrandIdRouteChildren {
  brandsBrandIdEditRoute: typeof brandsBrandIdEditRoute
  brandsBrandIdIndexRoute: typeof brandsBrandIdIndexRoute
}

const BrandsBrandIdRouteChildren: BrandsBrandIdRouteChildren = {
  brandsBrandIdEditRoute: brandsBrandIdEditRoute,
  brandsBrandIdIndexRoute: brandsBrandIdIndexRoute,
}

const BrandsBrandIdRouteWithChildren = BrandsBrandIdRoute._addFileChildren(
  BrandsBrandIdRouteChildren,
)

interface BrandsRouteChildren {
  BrandsBrandIdRoute: typeof BrandsBrandIdRouteWithChildren
  brandsNewRoute: typeof brandsNewRoute
  brandsIndexRoute: typeof brandsIndexRoute
}

const BrandsRouteChildren: BrandsRouteChildren = {
  BrandsBrandIdRoute: BrandsBrandIdRouteWithChildren,
  brandsNewRoute: brandsNewRoute,
  brandsIndexRoute: brandsIndexRoute,
}

const BrandsRouteWithChildren =
  BrandsRoute._addFileChildren(BrandsRouteChildren)

interface CategoriesCategorySlugRouteChildren {
  categoriesCategorySlugEditRoute: typeof categoriesCategorySlugEditRoute
  categoriesCategorySlugIndexRoute: typeof categoriesCategorySlugIndexRoute
}

const CategoriesCategorySlugRouteChildren: CategoriesCategorySlugRouteChildren =
  {
    categoriesCategorySlugEditRoute: categoriesCategorySlugEditRoute,
    categoriesCategorySlugIndexRoute: categoriesCategorySlugIndexRoute,
  }

const CategoriesCategorySlugRouteWithChildren =
  CategoriesCategorySlugRoute._addFileChildren(
    CategoriesCategorySlugRouteChildren,
  )

interface CategoriesRouteChildren {
  CategoriesCategorySlugRoute: typeof CategoriesCategorySlugRouteWithChildren
  categoriesNewRoute: typeof categoriesNewRoute
  categoriesIndexRoute: typeof categoriesIndexRoute
}

const CategoriesRouteChildren: CategoriesRouteChildren = {
  CategoriesCategorySlugRoute: CategoriesCategorySlugRouteWithChildren,
  categoriesNewRoute: categoriesNewRoute,
  categoriesIndexRoute: categoriesIndexRoute,
}

const CategoriesRouteWithChildren = CategoriesRoute._addFileChildren(
  CategoriesRouteChildren,
)

interface OrdersOrderIdRouteChildren {
  ordersOrderIdIndexRoute: typeof ordersOrderIdIndexRoute
}

const OrdersOrderIdRouteChildren: OrdersOrderIdRouteChildren = {
  ordersOrderIdIndexRoute: ordersOrderIdIndexRoute,
}

const OrdersOrderIdRouteWithChildren = OrdersOrderIdRoute._addFileChildren(
  OrdersOrderIdRouteChildren,
)

interface OrdersRouteChildren {
  OrdersOrderIdRoute: typeof OrdersOrderIdRouteWithChildren
  ordersAdminRoute: typeof ordersAdminRoute
  ordersCheckoutRoute: typeof ordersCheckoutRoute
  ordersIndexRoute: typeof ordersIndexRoute
}

const OrdersRouteChildren: OrdersRouteChildren = {
  OrdersOrderIdRoute: OrdersOrderIdRouteWithChildren,
  ordersAdminRoute: ordersAdminRoute,
  ordersCheckoutRoute: ordersCheckoutRoute,
  ordersIndexRoute: ordersIndexRoute,
}

const OrdersRouteWithChildren =
  OrdersRoute._addFileChildren(OrdersRouteChildren)

interface ProductsProductIdRouteChildren {
  productsProductIdEditRoute: typeof productsProductIdEditRoute
  productsProductIdIndexRoute: typeof productsProductIdIndexRoute
}

const ProductsProductIdRouteChildren: ProductsProductIdRouteChildren = {
  productsProductIdEditRoute: productsProductIdEditRoute,
  productsProductIdIndexRoute: productsProductIdIndexRoute,
}

const ProductsProductIdRouteWithChildren =
  ProductsProductIdRoute._addFileChildren(ProductsProductIdRouteChildren)

interface ProductsRouteChildren {
  ProductsProductIdRoute: typeof ProductsProductIdRouteWithChildren
  productsNewRoute: typeof productsNewRoute
  productsIndexRoute: typeof productsIndexRoute
}

const ProductsRouteChildren: ProductsRouteChildren = {
  ProductsProductIdRoute: ProductsProductIdRouteWithChildren,
  productsNewRoute: productsNewRoute,
  productsIndexRoute: productsIndexRoute,
}

const ProductsRouteWithChildren = ProductsRoute._addFileChildren(
  ProductsRouteChildren,
)

interface ProfileRouteChildren {
  profileEditRoute: typeof profileEditRoute
  profileIndexRoute: typeof profileIndexRoute
}

const ProfileRouteChildren: ProfileRouteChildren = {
  profileEditRoute: profileEditRoute,
  profileIndexRoute: profileIndexRoute,
}

const ProfileRouteWithChildren =
  ProfileRoute._addFileChildren(ProfileRouteChildren)

interface WishlistsWishlistIdRouteChildren {
  wishlistsWishlistIdIndexRoute: typeof wishlistsWishlistIdIndexRoute
}

const WishlistsWishlistIdRouteChildren: WishlistsWishlistIdRouteChildren = {
  wishlistsWishlistIdIndexRoute: wishlistsWishlistIdIndexRoute,
}

const WishlistsWishlistIdRouteWithChildren =
  WishlistsWishlistIdRoute._addFileChildren(WishlistsWishlistIdRouteChildren)

interface WishlistsRouteChildren {
  WishlistsWishlistIdRoute: typeof WishlistsWishlistIdRouteWithChildren
  wishlistsIndexRoute: typeof wishlistsIndexRoute
}

const WishlistsRouteChildren: WishlistsRouteChildren = {
  WishlistsWishlistIdRoute: WishlistsWishlistIdRouteWithChildren,
  wishlistsIndexRoute: wishlistsIndexRoute,
}

const WishlistsRouteWithChildren = WishlistsRoute._addFileChildren(
  WishlistsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof indexRoute
  '/about': typeof aboutRoute
  '/brands': typeof BrandsRouteWithChildren
  '/cart': typeof cartRoute
  '/categories': typeof CategoriesRouteWithChildren
  '/forgot-password': typeof forgotPasswordRoute
  '/login': typeof loginRoute
  '/orders': typeof OrdersRouteWithChildren
  '/products': typeof ProductsRouteWithChildren
  '/profile': typeof ProfileRouteWithChildren
  '/register': typeof registerRoute
  '/reset-password': typeof resetPasswordRoute
  '/wishlists': typeof WishlistsRouteWithChildren
  '/brands/$brandId': typeof BrandsBrandIdRouteWithChildren
  '/brands/new': typeof brandsNewRoute
  '/categories/$categorySlug': typeof CategoriesCategorySlugRouteWithChildren
  '/categories/new': typeof categoriesNewRoute
  '/orders/$orderId': typeof OrdersOrderIdRouteWithChildren
  '/orders/admin': typeof ordersAdminRoute
  '/orders/checkout': typeof ordersCheckoutRoute
  '/products/$productId': typeof ProductsProductIdRouteWithChildren
  '/products/new': typeof productsNewRoute
  '/profile/edit': typeof profileEditRoute
  '/wishlists/$wishlistId': typeof WishlistsWishlistIdRouteWithChildren
  '/brands/': typeof brandsIndexRoute
  '/categories/': typeof categoriesIndexRoute
  '/orders/': typeof ordersIndexRoute
  '/products/': typeof productsIndexRoute
  '/profile/': typeof profileIndexRoute
  '/wishlists/': typeof wishlistsIndexRoute
  '/brands/$brandId/edit': typeof brandsBrandIdEditRoute
  '/categories/$categorySlug/edit': typeof categoriesCategorySlugEditRoute
  '/products/$productId/edit': typeof productsProductIdEditRoute
  '/brands/$brandId/': typeof brandsBrandIdIndexRoute
  '/categories/$categorySlug/': typeof categoriesCategorySlugIndexRoute
  '/orders/$orderId/': typeof ordersOrderIdIndexRoute
  '/products/$productId/': typeof productsProductIdIndexRoute
  '/wishlists/$wishlistId/': typeof wishlistsWishlistIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof indexRoute
  '/about': typeof aboutRoute
  '/cart': typeof cartRoute
  '/forgot-password': typeof forgotPasswordRoute
  '/login': typeof loginRoute
  '/register': typeof registerRoute
  '/reset-password': typeof resetPasswordRoute
  '/brands/new': typeof brandsNewRoute
  '/categories/new': typeof categoriesNewRoute
  '/orders/admin': typeof ordersAdminRoute
  '/orders/checkout': typeof ordersCheckoutRoute
  '/products/new': typeof productsNewRoute
  '/profile/edit': typeof profileEditRoute
  '/brands': typeof brandsIndexRoute
  '/categories': typeof categoriesIndexRoute
  '/orders': typeof ordersIndexRoute
  '/products': typeof productsIndexRoute
  '/profile': typeof profileIndexRoute
  '/wishlists': typeof wishlistsIndexRoute
  '/brands/$brandId/edit': typeof brandsBrandIdEditRoute
  '/categories/$categorySlug/edit': typeof categoriesCategorySlugEditRoute
  '/products/$productId/edit': typeof productsProductIdEditRoute
  '/brands/$brandId': typeof brandsBrandIdIndexRoute
  '/categories/$categorySlug': typeof categoriesCategorySlugIndexRoute
  '/orders/$orderId': typeof ordersOrderIdIndexRoute
  '/products/$productId': typeof productsProductIdIndexRoute
  '/wishlists/$wishlistId': typeof wishlistsWishlistIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof indexRoute
  '/about': typeof aboutRoute
  '/brands': typeof BrandsRouteWithChildren
  '/cart': typeof cartRoute
  '/categories': typeof CategoriesRouteWithChildren
  '/forgot-password': typeof forgotPasswordRoute
  '/login': typeof loginRoute
  '/orders': typeof OrdersRouteWithChildren
  '/products': typeof ProductsRouteWithChildren
  '/profile': typeof ProfileRouteWithChildren
  '/register': typeof registerRoute
  '/reset-password': typeof resetPasswordRoute
  '/wishlists': typeof WishlistsRouteWithChildren
  '/brands/$brandId': typeof BrandsBrandIdRouteWithChildren
  '/brands/new': typeof brandsNewRoute
  '/categories/$categorySlug': typeof CategoriesCategorySlugRouteWithChildren
  '/categories/new': typeof categoriesNewRoute
  '/orders/$orderId': typeof OrdersOrderIdRouteWithChildren
  '/orders/admin': typeof ordersAdminRoute
  '/orders/checkout': typeof ordersCheckoutRoute
  '/products/$productId': typeof ProductsProductIdRouteWithChildren
  '/products/new': typeof productsNewRoute
  '/profile/edit': typeof profileEditRoute
  '/wishlists/$wishlistId': typeof WishlistsWishlistIdRouteWithChildren
  '/brands/': typeof brandsIndexRoute
  '/categories/': typeof categoriesIndexRoute
  '/orders/': typeof ordersIndexRoute
  '/products/': typeof productsIndexRoute
  '/profile/': typeof profileIndexRoute
  '/wishlists/': typeof wishlistsIndexRoute
  '/brands/$brandId/edit': typeof brandsBrandIdEditRoute
  '/categories/$categorySlug/edit': typeof categoriesCategorySlugEditRoute
  '/products/$productId/edit': typeof productsProductIdEditRoute
  '/brands/$brandId/': typeof brandsBrandIdIndexRoute
  '/categories/$categorySlug/': typeof categoriesCategorySlugIndexRoute
  '/orders/$orderId/': typeof ordersOrderIdIndexRoute
  '/products/$productId/': typeof productsProductIdIndexRoute
  '/wishlists/$wishlistId/': typeof wishlistsWishlistIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/brands'
    | '/cart'
    | '/categories'
    | '/forgot-password'
    | '/login'
    | '/orders'
    | '/products'
    | '/profile'
    | '/register'
    | '/reset-password'
    | '/wishlists'
    | '/brands/$brandId'
    | '/brands/new'
    | '/categories/$categorySlug'
    | '/categories/new'
    | '/orders/$orderId'
    | '/orders/admin'
    | '/orders/checkout'
    | '/products/$productId'
    | '/products/new'
    | '/profile/edit'
    | '/wishlists/$wishlistId'
    | '/brands/'
    | '/categories/'
    | '/orders/'
    | '/products/'
    | '/profile/'
    | '/wishlists/'
    | '/brands/$brandId/edit'
    | '/categories/$categorySlug/edit'
    | '/products/$productId/edit'
    | '/brands/$brandId/'
    | '/categories/$categorySlug/'
    | '/orders/$orderId/'
    | '/products/$productId/'
    | '/wishlists/$wishlistId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cart'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/brands/new'
    | '/categories/new'
    | '/orders/admin'
    | '/orders/checkout'
    | '/products/new'
    | '/profile/edit'
    | '/brands'
    | '/categories'
    | '/orders'
    | '/products'
    | '/profile'
    | '/wishlists'
    | '/brands/$brandId/edit'
    | '/categories/$categorySlug/edit'
    | '/products/$productId/edit'
    | '/brands/$brandId'
    | '/categories/$categorySlug'
    | '/orders/$orderId'
    | '/products/$productId'
    | '/wishlists/$wishlistId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/brands'
    | '/cart'
    | '/categories'
    | '/forgot-password'
    | '/login'
    | '/orders'
    | '/products'
    | '/profile'
    | '/register'
    | '/reset-password'
    | '/wishlists'
    | '/brands/$brandId'
    | '/brands/new'
    | '/categories/$categorySlug'
    | '/categories/new'
    | '/orders/$orderId'
    | '/orders/admin'
    | '/orders/checkout'
    | '/products/$productId'
    | '/products/new'
    | '/profile/edit'
    | '/wishlists/$wishlistId'
    | '/brands/'
    | '/categories/'
    | '/orders/'
    | '/products/'
    | '/profile/'
    | '/wishlists/'
    | '/brands/$brandId/edit'
    | '/categories/$categorySlug/edit'
    | '/products/$productId/edit'
    | '/brands/$brandId/'
    | '/categories/$categorySlug/'
    | '/orders/$orderId/'
    | '/products/$productId/'
    | '/wishlists/$wishlistId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  indexRoute: typeof indexRoute
  aboutRoute: typeof aboutRoute
  BrandsRoute: typeof BrandsRouteWithChildren
  cartRoute: typeof cartRoute
  CategoriesRoute: typeof CategoriesRouteWithChildren
  forgotPasswordRoute: typeof forgotPasswordRoute
  loginRoute: typeof loginRoute
  OrdersRoute: typeof OrdersRouteWithChildren
  ProductsRoute: typeof ProductsRouteWithChildren
  ProfileRoute: typeof ProfileRouteWithChildren
  registerRoute: typeof registerRoute
  resetPasswordRoute: typeof resetPasswordRoute
  WishlistsRoute: typeof WishlistsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  indexRoute: indexRoute,
  aboutRoute: aboutRoute,
  BrandsRoute: BrandsRouteWithChildren,
  cartRoute: cartRoute,
  CategoriesRoute: CategoriesRouteWithChildren,
  forgotPasswordRoute: forgotPasswordRoute,
  loginRoute: loginRoute,
  OrdersRoute: OrdersRouteWithChildren,
  ProductsRoute: ProductsRouteWithChildren,
  ProfileRoute: ProfileRouteWithChildren,
  registerRoute: registerRoute,
  resetPasswordRoute: resetPasswordRoute,
  WishlistsRoute: WishlistsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/brands",
        "/cart",
        "/categories",
        "/forgot-password",
        "/login",
        "/orders",
        "/products",
        "/profile",
        "/register",
        "/reset-password",
        "/wishlists"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/brands": {
      "filePath": "",
      "children": [
        "/brands/$brandId",
        "/brands/new",
        "/brands/"
      ]
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/categories": {
      "filePath": "",
      "children": [
        "/categories/$categorySlug",
        "/categories/new",
        "/categories/"
      ]
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/orders": {
      "filePath": "",
      "children": [
        "/orders/$orderId",
        "/orders/admin",
        "/orders/checkout",
        "/orders/"
      ]
    },
    "/products": {
      "filePath": "",
      "children": [
        "/products/$productId",
        "/products/new",
        "/products/"
      ]
    },
    "/profile": {
      "filePath": "",
      "children": [
        "/profile/edit",
        "/profile/"
      ]
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/wishlists": {
      "filePath": "",
      "children": [
        "/wishlists/$wishlistId",
        "/wishlists/"
      ]
    },
    "/brands/$brandId": {
      "filePath": "",
      "parent": "/brands",
      "children": [
        "/brands/$brandId/edit",
        "/brands/$brandId/"
      ]
    },
    "/brands/new": {
      "filePath": "brands/new.tsx",
      "parent": "/brands"
    },
    "/categories/$categorySlug": {
      "filePath": "",
      "parent": "/categories",
      "children": [
        "/categories/$categorySlug/edit",
        "/categories/$categorySlug/"
      ]
    },
    "/categories/new": {
      "filePath": "categories/new.tsx",
      "parent": "/categories"
    },
    "/orders/$orderId": {
      "filePath": "",
      "parent": "/orders",
      "children": [
        "/orders/$orderId/"
      ]
    },
    "/orders/admin": {
      "filePath": "orders/admin.tsx",
      "parent": "/orders"
    },
    "/orders/checkout": {
      "filePath": "orders/checkout.tsx",
      "parent": "/orders"
    },
    "/products/$productId": {
      "filePath": "",
      "parent": "/products",
      "children": [
        "/products/$productId/edit",
        "/products/$productId/"
      ]
    },
    "/products/new": {
      "filePath": "products/new.tsx",
      "parent": "/products"
    },
    "/profile/edit": {
      "filePath": "profile/edit.tsx",
      "parent": "/profile"
    },
    "/wishlists/$wishlistId": {
      "filePath": "",
      "parent": "/wishlists",
      "children": [
        "/wishlists/$wishlistId/"
      ]
    },
    "/brands/": {
      "filePath": "brands/index.tsx",
      "parent": "/brands"
    },
    "/categories/": {
      "filePath": "categories/index.tsx",
      "parent": "/categories"
    },
    "/orders/": {
      "filePath": "orders/index.tsx",
      "parent": "/orders"
    },
    "/products/": {
      "filePath": "products/index.tsx",
      "parent": "/products"
    },
    "/profile/": {
      "filePath": "profile/index.tsx",
      "parent": "/profile"
    },
    "/wishlists/": {
      "filePath": "wishlists/index.tsx",
      "parent": "/wishlists"
    },
    "/brands/$brandId/edit": {
      "filePath": "brands/$brandId/edit.tsx",
      "parent": "/brands/$brandId"
    },
    "/categories/$categorySlug/edit": {
      "filePath": "categories/$categorySlug/edit.tsx",
      "parent": "/categories/$categorySlug"
    },
    "/products/$productId/edit": {
      "filePath": "products/$productId/edit.tsx",
      "parent": "/products/$productId"
    },
    "/brands/$brandId/": {
      "filePath": "brands/$brandId/index.tsx",
      "parent": "/brands/$brandId"
    },
    "/categories/$categorySlug/": {
      "filePath": "categories/$categorySlug/index.tsx",
      "parent": "/categories/$categorySlug"
    },
    "/orders/$orderId/": {
      "filePath": "orders/$orderId/index.tsx",
      "parent": "/orders/$orderId"
    },
    "/products/$productId/": {
      "filePath": "products/$productId/index.tsx",
      "parent": "/products/$productId"
    },
    "/wishlists/$wishlistId/": {
      "filePath": "wishlists/$wishlistId/index.tsx",
      "parent": "/wishlists/$wishlistId"
    }
  }
}
ROUTE_MANIFEST_END */
